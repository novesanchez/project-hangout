<?php

/**
 * Requester
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Requester extends BaseRequester
{
    public function updateHangoutRequest($column, $val)
    {
        return RequesterTable::getInstance()->updateHangoutRequest($column,$val);
    }
    
    public static function updateRequesterSurveyStatus($ratee, $posting_id, $rater)
    {
            
          $q = RatersGroupTable::getInstance()->createQuery('rg');
          $q->where('rg.ratee = ?', $ratee);
          $q->andWhere('rg.posting_id = ?', $posting_id);
          $rec = $q->execute();        
          
          $q = RatersGroupTable::getInstance()->findOneBy("id", $rec[0]->getId());
          $q->setCounterDone(1);
          $q->save();
    }
    
    public function getTotalHangoutRequest($confirmation_key)
    {
        $q = RequesterTable::queryRequester();
        $q->where('r.confirmation_key = ?',$confirmation_key);
        $q->andWhere('r.request_status_id = 4');
        $result = $q->execute();
        $postingId = null;
        if($result->count() > 0){
            $postingId = $result[0]->getPostingId();
        }
        return array( $result->count(), $postingId );
    }
    
    public static function getRequesterUsername($posting_id)
    {
        $q = RequesterTable::queryRequester();
        $q->leftJoin('r.Member m');
        $q->where('r.posting_id = ?', $posting_id);
        $q->andWhere('r.request_status_id = ?',4);
        return $q->execute();
    }
        
    public static function getChatMessengerDetails($user_id)
    {
        
        return $result = 
            Doctrine_Manager::getInstance()->connection()->
            execute("SELECT 
                        DISTINCT 
                        r.posting_id, 
                        r.member_id as requester_id, 
                        foo.member_id,
                        foo.posting_title 
                     FROM requester r
                     JOIN (
                SELECT
                    p.id as posting_id,
                    r.member_id as requester_id,
                    p.member_id,
                    p.posting_title
                FROM `requester` r
                JOIN postings p ON r.posting_id = p.id
                WHERE
                    r.request_status_id = 4 
                    AND 
                    STR_TO_DATE( CONCAT(p.date_to_hangout, ' ', p.starttime), '%Y-%m-%d %h:%i') >= DATE_FORMAT (NOW(),'%Y-%m-%d %h:%i')
                    AND 
                    ( p.member_id = $user_id OR r.member_id = $user_id )
                ) foo ON r.posting_id = foo.posting_id order by posting_id;")
            ->fetchAll();
        
    }
    
    public static function deleteRequester($posting_id)
    {
        try{
            $q = Doctrine::getTable('Requester')->findOneBy("posting_id", $posting_id);            
            if($q)
                $q->delete();
            return true;
        }catch(Exception $e){
            die( $e->getMessage());
        }
    }
    
}