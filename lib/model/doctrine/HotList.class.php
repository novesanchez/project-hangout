<?php

/**
 * HotList
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class HotList extends BaseHotList
{
    public static function addToHotList($params = array())
    {
        $posting_id = $params[0];
        $member_id  = $params[1];

        $q = HotListTable::getInstance()->createQuery('h');
        $q->where('posting_id = ?', $posting_id);
        $q->andWhere('member_id = ?', $member_id);
        
        if($q->execute()->count() > 0){
            return array('Already added in your Hot list.', false);
        } else {
            
            $hotlist = new HotList();
            $hotlist->setMemberId($member_id);
            $hotlist->setPostingId($posting_id);
            try{
                $hotlist->save();
                return array('This posting has been added to your HOT List', true);
            } catch(Exception $e) {
                return array('Unable to process request. Please try again later!', false);
            }
            
        }
    }
    
    public static function loadHotList($member_id)
    {
        try{
            $q = HotListTable::getInstance()->createQuery('h');
            $q->innerJoin('h.Postings p');
            $q->innerJoin('p.Member m');
            $q->innerJoin('m.Photo ph');
            $q->where('h.member_id = ?', $member_id);
            return $q->execute();
        }catch(Exception $e){
            die($e->getMessage());
        }        
    }
    
    public static function deleteHotList($hotlist_id)
    {
        try{
            $q = Doctrine::getTable('HotList')->findOneBy("id", $hotlist_id);
            $q->delete();
            return 'Post has been deleted successfully!';
        }catch(Exception $e){
            return 'Problem encountered while deleting post.';
        }
    }
    
    public static function getHotListMembers($posting_id, $userId)
    {
        try{
            $q = HotListTable::getInstance()->createQuery('h');
            $q->innerJoin('h.Postings p');
            $q->innerJoin('h.Member m');
            $q->where('h.posting_id = ?', $posting_id);
            $q->andWhere('h.member_id != ?', $userId);
            return $q->execute();
        }catch(Exception $e){
            return array();
        }
    }
           
}