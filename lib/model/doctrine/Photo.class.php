<?php

/**
 * Photo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Photo extends BasePhoto
{
    public function getPicturePath($profilePictureId = null)
    {
        if(is_null($profilePictureId))
        {
            throw new Exception('Profile picture id cannot be null');
        }
        else
        {
            $result = PhotoTable::getInstance()->getPicturePath($profilePictureId);
            return (isset($result[0]['path']))? $result[0]['path']:"";
        }
    }
    
    public function getPhotos($memberId = null)
    {
        if(is_null($memberId))
        {
            throw new Exception('Member Id cannot be null.');
        }
        else
        {
            $result = PhotoTable::getInstance()->getPhotos($memberId);
            return $result;
        }
    }
    
    public static function RemovePhoto($photoId)
    {
        try{
            $q = Doctrine::getTable('Photo')->findOneBy("id", $photoId);
            $q->is_delete = true;
            $q->save();
        }catch(Exception $e){
            return $e->getMessage();
        }
    }      
    
    public static function addPhotoRecord($path, $memberId, $order)
    {
        try{

            $q = "INSERT INTO photo (path, `order`, member_id, created_at) VALUES ('$path', $order, $memberId, now());";
            Doctrine_Manager::getInstance()->connection()->execute($q);
            
            return true;
        }catch(Exception $e){
            die($e->getMessage());
        }
    }
    
    public static function updatePhotoRecord($path, $photoId)
    {
        try{
            $q = Doctrine::getTable('Photo')->findOneBy("id", $photoId);
            $q->path = $path;
            $q->created_at = date('Y-m-d H:i:s');
            $q->is_delete = false;
            $q->save();
            return true;
        }catch(Exception $e){
            return $e->getMessage();
        }
    }    
}