<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Zips', 'doctrine');

/**
 * BaseZips
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $zip_code
 * @property string $state
 * 
 * @method integer getId()                 Returns the current record's "id" value
 * @method integer getZipCode()            Returns the current record's "zip_code" value
 * @method string  getStateAbbreviation()  Returns the current record's "state_abbreviation" value
 * @method decimal getLatitude()           Returns the current record's "latitude" value
 * @method decimal getLongitude()          Returns the current record's "longitude" value
 * @method string  getCity()               Returns the current record's "city" value
 * @method string  getState()              Returns the current record's "state" value
 * @method Zips    setId()                 Sets the current record's "id" value
 * @method Zips    setZipCode()            Sets the current record's "zip_code" value
 * @method Zips    setStateAbbreviation()  Sets the current record's "state_abbreviation" value
 * @method Zips    setLatitude()           Sets the current record's "latitude" value
 * @method Zips    setLongitude()          Sets the current record's "longitude" value
 * @method Zips    setCity()               Sets the current record's "city" value
 * @method Zips    setState()              Sets the current record's "state" value_abbreviation
 * @property decimal $latitude
 * @property decimal $longitude
 * @property string $city
 * @property string $state
 * 
 * @method integer getId()                 Returns the current record's "id" value
 * @method integer getZipCode()            Returns the current record's "zip_code" value
 * @method string  getStateAbbreviation()  Returns the current record's "state_abbreviation" value
 * @method decimal getLatitude()           Returns the current record's "latitude" value
 * @method decimal getLongitude()          Returns the current record's "longitude" value
 * @method string  getCity()               Returns the current record's "city" value
 * @method string  getState()              Returns the current record's "state" value
 * @method Zips    setId()                 Sets the current record's "id" value
 * @method Zips    setZipCode()            Sets the current record's "zip_code" value
 * @method Zips    setStateAbbreviation()  Sets the current record's "state_abbreviation" value
 * @method Zips    setLatitude()           Sets the current record's "latitude" value
 * @method Zips    setLongitude()          Sets the current record's "longitude" value
 * @method Zips    setCity()               Sets the current record's "city" value
 * @method Zips    setState()              Sets the current record's "state" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseZips extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('zips');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('zip_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('state_abbreviation', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('latitude', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '6',
             ));
        $this->hasColumn('longitude', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '6',
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('state', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}