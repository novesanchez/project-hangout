<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Postings', 'doctrine');

/**
 * BasePostings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property string $gender_type
 * @property string $date_to_hangout
 * @property integer $num_ppl
 * @property string $posting_enddt
 * @property integer $age_range_1
 * @property integer $age_range_2
 * @property string $starttime
 * @property string $endtime
 * @property string $posting_title
 * @property string $posting_desc
 * @property integer $status
 * @property timestamp $date_created
 * @property string $location
 * @property Member $Member
 * @property Doctrine_Collection $HotList
 * @property Doctrine_Collection $RatersGroup
 * @property Doctrine_Collection $Requester
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getMemberId()        Returns the current record's "member_id" value
 * @method string              getGenderType()      Returns the current record's "gender_type" value
 * @method string              getDateToHangout()   Returns the current record's "date_to_hangout" value
 * @method integer             getNumPpl()          Returns the current record's "num_ppl" value
 * @method string              getPostingEnddt()    Returns the current record's "posting_enddt" value
 * @method integer             getAgeRange1()       Returns the current record's "age_range_1" value
 * @method integer             getAgeRange2()       Returns the current record's "age_range_2" value
 * @method string              getStarttime()       Returns the current record's "starttime" value
 * @method string              getEndtime()         Returns the current record's "endtime" value
 * @method string              getPostingTitle()    Returns the current record's "posting_title" value
 * @method string              getPostingDesc()     Returns the current record's "posting_desc" value
 * @method integer             getStatus()          Returns the current record's "status" value
 * @method timestamp           getDateCreated()     Returns the current record's "date_created" value
 * @method string              getLocation()        Returns the current record's "location" value
 * @method string              getEnddateHangout()  Returns the current record's "enddate_hangout" value 
 * @method Member              getMember()          Returns the current record's "Member" value
 * @method Doctrine_Collection getHotList()         Returns the current record's "HotList" collection
 * @method Doctrine_Collection getRatersGroup()     Returns the current record's "RatersGroup" collection
 * @method Doctrine_Collection getRequester()       Returns the current record's "Requester" collection
 * @method Postings            setId()              Sets the current record's "id" value
 * @method Postings            setMemberId()        Sets the current record's "member_id" value
 * @method Postings            setGenderType()      Sets the current record's "gender_type" value
 * @method Postings            setDateToHangout()   Sets the current record's "date_to_hangout" value
 * @method Postings            setNumPpl()          Sets the current record's "num_ppl" value
 * @method Postings            setPostingEnddt()    Sets the current record's "posting_enddt" value
 * @method Postings            setAgeRange1()       Sets the current record's "age_range_1" value
 * @method Postings            setAgeRange2()       Sets the current record's "age_range_2" value
 * @method Postings            setStarttime()       Sets the current record's "starttime" value
 * @method Postings            setEndtime()         Sets the current record's "endtime" value
 * @method Postings            setPostingTitle()    Sets the current record's "posting_title" value
 * @method Postings            setPostingDesc()     Sets the current record's "posting_desc" value
 * @method Postings            setStatus()          Sets the current record's "status" value
 * @method Postings            setDateCreated()     Sets the current record's "date_created" value
 * @method Postings            setLocation()        Sets the current record's "location" value
 * @method Postings            setMember()          Sets the current record's "Member" value
 * @method Postings            setHotList()         Sets the current record's "HotList" collection
 * @method Postings            setRatersGroup()     Sets the current record's "RatersGroup" collection
 * @method Postings            setRequester()       Sets the current record's "Requester" collection
 * @method Postings            setEnddateHangout()  Sets the current record's "enddate_hangout" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostings extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('postings');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('member_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('gender_type', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_to_hangout', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('num_ppl', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('posting_enddt', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('age_range_1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('age_range_2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('starttime', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('endtime', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('posting_title', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('posting_desc', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('date_created', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('location', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('enddate_hangout', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));        
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id'));

        $this->hasMany('HotList', array(
             'local' => 'id',
             'foreign' => 'posting_id'));

        $this->hasMany('RatersGroup', array(
             'local' => 'id',
             'foreign' => 'posting_id'));

        $this->hasMany('Requester', array(
             'local' => 'id',
             'foreign' => 'posting_id'));
    }
}