<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Hangout', 'doctrine');

/**
 * BaseHangout
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $topic
 * @property string $description
 * @property string $location
 * @property string $objective
 * @property timestamp $start_time
 * @property timestamp $end_time
 * @property date $date
 * @property integer $number_of_people
 * @property string $gender_request
 * @property timestamp $created_at
 * @property integer $member_id
 * @property integer $policy_id
 * @property integer $hangout_status_id
 * @property timestamp $end_date
 * @property Member $Member
 * @property HangoutStatus $HangoutStatus
 * 
 * @method integer       getId()                Returns the current record's "id" value
 * @method string        getTopic()             Returns the current record's "topic" value
 * @method string        getDescription()       Returns the current record's "description" value
 * @method string        getLocation()          Returns the current record's "location" value
 * @method string        getObjective()         Returns the current record's "objective" value
 * @method timestamp     getStartTime()         Returns the current record's "start_time" value
 * @method timestamp     getEndTime()           Returns the current record's "end_time" value
 * @method date          getDate()              Returns the current record's "date" value
 * @method integer       getNumberOfPeople()    Returns the current record's "number_of_people" value
 * @method string        getGenderRequest()     Returns the current record's "gender_request" value
 * @method timestamp     getCreatedAt()         Returns the current record's "created_at" value
 * @method integer       getMemberId()          Returns the current record's "member_id" value
 * @method integer       getPolicyId()          Returns the current record's "policy_id" value
 * @method integer       getHangoutStatusId()   Returns the current record's "hangout_status_id" value
 * @method timestamp     getEndDate()           Returns the current record's "end_date" value
 * @method Member        getMember()            Returns the current record's "Member" value
 * @method HangoutStatus getHangoutStatus()     Returns the current record's "HangoutStatus" value
 * @method Hangout       setId()                Sets the current record's "id" value
 * @method Hangout       setTopic()             Sets the current record's "topic" value
 * @method Hangout       setDescription()       Sets the current record's "description" value
 * @method Hangout       setLocation()          Sets the current record's "location" value
 * @method Hangout       setObjective()         Sets the current record's "objective" value
 * @method Hangout       setStartTime()         Sets the current record's "start_time" value
 * @method Hangout       setEndTime()           Sets the current record's "end_time" value
 * @method Hangout       setDate()              Sets the current record's "date" value
 * @method Hangout       setNumberOfPeople()    Sets the current record's "number_of_people" value
 * @method Hangout       setGenderRequest()     Sets the current record's "gender_request" value
 * @method Hangout       setCreatedAt()         Sets the current record's "created_at" value
 * @method Hangout       setMemberId()          Sets the current record's "member_id" value
 * @method Hangout       setPolicyId()          Sets the current record's "policy_id" value
 * @method Hangout       setHangoutStatusId()   Sets the current record's "hangout_status_id" value
 * @method Hangout       setEndDate()           Sets the current record's "end_date" value
 * @method Hangout       setMember()            Sets the current record's "Member" value
 * @method Hangout       setHangoutStatus()     Sets the current record's "HangoutStatus" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHangout extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hangout');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('topic', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('description', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('location', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('objective', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('start_time', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('end_time', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('number_of_people', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gender_request', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('member_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('policy_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('hangout_status_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('end_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id'));

        $this->hasOne('HangoutStatus', array(
             'local' => 'hangout_status_id',
             'foreign' => 'id'));
    }
}