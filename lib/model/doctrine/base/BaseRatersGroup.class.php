<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RatersGroup', 'doctrine');

/**
 * BaseRatersGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $rater
 * @property integer $posting_id
 * @property integer $counter_done
 * @property integer $ratee
 * @property Member $Member
 * @property Member $Member_2
 * @property Postings $Postings
 * @property Doctrine_Collection $SurveyComments
 * @property Doctrine_Collection $SurveyResults
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getRater()          Returns the current record's "rater" value
 * @method integer             getPostingId()      Returns the current record's "posting_id" value
 * @method integer             getCounterDone()    Returns the current record's "counter_done" value
 * @method integer             getRatee()          Returns the current record's "ratee" value
 * @method Member              getMember()         Returns the current record's "Member" value
 * @method Member              getMember2()        Returns the current record's "Member_2" value
 * @method Postings            getPostings()       Returns the current record's "Postings" value
 * @method Doctrine_Collection getSurveyComments() Returns the current record's "SurveyComments" collection
 * @method Doctrine_Collection getSurveyResults()  Returns the current record's "SurveyResults" collection
 * @method RatersGroup         setId()             Sets the current record's "id" value
 * @method RatersGroup         setRater()          Sets the current record's "rater" value
 * @method RatersGroup         setPostingId()      Sets the current record's "posting_id" value
 * @method RatersGroup         setCounterDone()    Sets the current record's "counter_done" value
 * @method RatersGroup         setRatee()          Sets the current record's "ratee" value
 * @method RatersGroup         setMember()         Sets the current record's "Member" value
 * @method RatersGroup         setMember2()        Sets the current record's "Member_2" value
 * @method RatersGroup         setPostings()       Sets the current record's "Postings" value
 * @method RatersGroup         setSurveyComments() Sets the current record's "SurveyComments" collection
 * @method RatersGroup         setSurveyResults()  Sets the current record's "SurveyResults" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRatersGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('raters_group');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('rater', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('posting_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('counter_done', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ratee', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member', array(
             'local' => 'rater',
             'foreign' => 'id'));

        $this->hasOne('Member as Member_2', array(
             'local' => 'ratee',
             'foreign' => 'id'));

        $this->hasOne('Postings', array(
             'local' => 'posting_id',
             'foreign' => 'id'));

        $this->hasMany('SurveyComments', array(
             'local' => 'id',
             'foreign' => 'rater_group_id'));

        $this->hasMany('SurveyResults', array(
             'local' => 'id',
             'foreign' => 'raters_group_id'));
    }
}