<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Photo', 'doctrine');

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $path
 * @property string $description
 * @property integer $member_id
 * @property integer $is_delete
 * @property integer $order
 * @property timestamp $created_at
 * @property Doctrine_Collection $Member
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getPath()        Returns the current record's "path" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getMemberId()    Returns the current record's "member_id" value
 * @method integer             getIsDelete()    Returns the current record's "is_delete" value
 * @method integer             getOrder()       Returns the current record's "order" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method Doctrine_Collection getMember()      Returns the current record's "Member" collection
 * @method Photo               setId()          Sets the current record's "id" value
 * @method Photo               setPath()        Sets the current record's "path" value
 * @method Photo               setDescription() Sets the current record's "description" value
 * @method Photo               setMemberId()    Sets the current record's "member_id" value
 * @method Photo               setIsDelete()    Sets the current record's "is_delete" value
 * @method Photo               setOrder()       Sets the current record's "order" value
 * @method Photo               setCreatedAt()   Sets the current record's "created_at" value
 * @method Photo               setMember()      Sets the current record's "Member" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('path', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('member_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_delete', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('order', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Member', array(
             'local' => 'id',
             'foreign' => 'profile_picture_id'));
    }
}