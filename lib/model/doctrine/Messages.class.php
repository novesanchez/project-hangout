<?php

/**
 * Messages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Messages extends BaseMessages
{
    
    public static function sendChatMessage($params = array())
    {
        try{
            $q = new Messages();
            $q->setMemberId($params['member_id']);
            $q->setSenderId($params['sender_id']);
            $q->setMessage($params['message']);
            $q->setIsRead($params['is_read']);
            $q->setDateRead(date('Y-m-d H:i:s'));
            $q->setPostingId($params['posting_id']);
            $q->setIsFriend($params['is_friend']);
            $q->save();
            unset($q);
            return TRUE;
        }catch(Exception $e){
            return array(FALSE, $e->getMessage());
        }
    }
    
    public static function getChatMessages($posting_id, $member_id, $top_msg_id)
    {
        try{
            
//            $q = MessagesTable::getInstance()->createQuery('msg');
//            $q->innerJoin('msg.Member mbr');
//            $q->where('msg.posting_id = ?', $posting_id);
//            $q->andWhere('msg.member_id = ?', $member_id);
//            $q->orderBy('msg.date_created asc');
            
           return $result = 
                  Doctrine_Manager::getInstance()->connection()->
                  execute("SELECT 
                            DISTINCT 
                            msg.id,
                            msg.date_created, 
                            mbr.nick_name,
                            msg.message,
                            msg.posting_id,
                            CASE 
                             WHEN msg.sender_id = $member_id THEN 'TRUE'
                             ELSE 'FALSE'
                           END AS is_owner
                           FROM messages msg
                           LEFT JOIN member mbr ON msg.sender_id = mbr.id
                           WHERE 
                            posting_id = $posting_id 
                            AND 
                            msg.member_id = $member_id
                            AND
                            msg.id > $top_msg_id;")
                   ->fetchAll();
        
        }catch(Exception $e){
            die($e->getMessage());
        }
    }
}