<?php

/**
 * Member
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Member extends BaseMember
{

    private $mpId;
    
    public function setId($id)
    {
        $this->mpId = $id;
    }
    
    public function getMemberInfo($column = null)
    {
        if(is_null($this->mpId))
        {
            throw new Exception ('No mpId id given.');
        }
        
        if(is_null($column))
        {
            throw new Exception ('Column parameter is required.');            
        }
        
        $isProfileId = (strstr($this->mpId,"_") === false)? false:true;        
        $result = MemberTable::getInstance()->getMemberInfo($this->mpId,$isProfileId);        
        return isset($result[0][$column])? $result[0][$column]:'';
    }
    
    public function getMemberProfileInfo($memberId = null, $is_profile_id = false)
    {
        if(is_null($memberId))
        {
            $memberId = $_SESSION['userId'];
        }
        
        $result = MemberTable::getInstance()->getMemberProfileInfo($memberId, $is_profile_id);
        return $result;
    }
    
    public static function checkMemberInfo($column = null, $value = null)
    {
        $q = MemberTable::getInstance()->createQuery();
        $q->where("$column = ?", $value);
        return $q->execute();
    }
    
    public static function resetPassword($email)
    {
        try{
            $q = Doctrine::getTable('Member')->findOneBy("email", $email);
            $q->password = md5('123456');
            $q->save();
        }catch(Exception $e){
            die($e->getMessage());
        }
    }

    public static function changePassword($memberId, $newPwd)
    {
        try{
            $q = Doctrine::getTable('Member')->findOneBy("id", $memberId);
            $q->password = $newPwd;
            $q->save();
        }catch(Exception $e){
            die($e->getMessage());
        }
    }
    
    public static function MakeProfilePicture($memberId, $photoId)
    {
        try{
            $q = Doctrine::getTable('Member')->findOneBy("id", $memberId);
            $q->profile_picture_id = $photoId;
            $q->save();
        }catch(Exception $e){
            return $e->getMessage();
        }
    }    

}